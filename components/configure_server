#!/bin/bash
printf "=========================================================================\n"
printf "Configuring server.... \n"
printf "=========================================================================\n"


# Autostart
systemctl enable nginx.service
systemctl enable php-fpm.service
systemctl enable mysql.service # Failed to execute operation: No such file or directory
systemctl enable fail2ban.service
systemctl enable iptables.service
systemctl enable ip6tables.service

mkdir -p /home/$server_name/public_html
mkdir /home/$server_name/private_html
mkdir /home/$server_name/logs
chmod 777 /home/$server_name/logs

mkdir -p /var/log/nginx
chown -R nginx:nginx /var/log/nginx
chown -R nginx:nginx /var/lib/php/session

cp ./lib/index.html /home/$server_name/public_html/index.html

systemctl start nginx.service
systemctl start php-fpm.service
systemctl start mysql.service

systemctl start iptables.service
systemctl start ip6tables.service

# PHP #
check_phplowmem=$(expr $server_ram_total \< $phplowmem)
max_children=`echo "scale=0;$server_ram_mb*0.4/30" | bc`
if [ "$check_phplowmem" == "1" ]; then
    lessphpmem=y
fi

if [[ "$lessphpmem" = [yY] ]]; then
    # echo -e "\nCopying php-fpm-min.conf /etc/php-fpm.d/www.conf\n"
    cp ./lib/php-fpm.conf /etc/php-fpm.conf
    cp ./lib/www.conf /etc/php-fpm.d/www.conf
else
    # echo -e "\nCopying php-fpm.conf /etc/php-fpm.d/www.conf\n"
    cp ./lib/php-fpm2.conf /etc/php-fpm.conf
    cp ./lib/www2.conf /etc/php-fpm.d/www.conf
fi # lessphpmem

sed -i "s/server_name_here/$server_name/g" /etc/php-fpm.conf
sed -i "s/server_name_here/$server_name/g" /etc/php-fpm.d/www.conf
sed -i "s/max_children_here/$max_children/g" /etc/php-fpm.d/www.conf

# dynamic PHP memory_limit calculation
if [[ "$server_ram_total" -le '262144' ]]; then
    php_memorylimit='48M'
    php_uploadlimit='48M'
    php_realpathlimit='256k'
    php_realpathttl='14400'
elif [[ "$server_ram_total" -gt '262144' && "$server_ram_total" -le '393216' ]]; then
    php_memorylimit='96M'
    php_uploadlimit='96M'
    php_realpathlimit='320k'
    php_realpathttl='21600'
elif [[ "$server_ram_total" -gt '393216' && "$server_ram_total" -le '524288' ]]; then
    php_memorylimit='128M'
    php_uploadlimit='128M'
    php_realpathlimit='384k'
    php_realpathttl='28800'
elif [[ "$server_ram_total" -gt '524288' && "$server_ram_total" -le '1049576' ]]; then
    php_memorylimit='160M'
    php_uploadlimit='160M'
    php_realpathlimit='384k'
    php_realpathttl='28800'
elif [[ "$server_ram_total" -gt '1049576' && "$server_ram_total" -le '2097152' ]]; then
    php_memorylimit='256M'
    php_uploadlimit='256M'
    php_realpathlimit='384k'
    php_realpathttl='28800'
elif [[ "$server_ram_total" -gt '2097152' && "$server_ram_total" -le '3145728' ]]; then
    php_memorylimit='320M'
    php_uploadlimit='320M'
    php_realpathlimit='512k'
    php_realpathttl='43200'
elif [[ "$server_ram_total" -gt '3145728' && "$server_ram_total" -le '4194304' ]]; then
    php_memorylimit='512M'
    php_uploadlimit='512M'
    php_realpathlimit='512k'
    php_realpathttl='43200'
elif [[ "$server_ram_total" -gt '4194304' ]]; then
    php_memorylimit='800M'
    php_uploadlimit='800M'
    php_realpathlimit='640k'
    php_realpathttl='86400'
fi

cat > "/etc/php.d/dwg-custom.ini" <<END
date.timezone = Asia/Ho_Chi_Minh
max_execution_time = 180
short_open_tag = On
realpath_cache_size = $php_realpathlimit
realpath_cache_ttl = $php_realpathttl
memory_limit = $php_memorylimit
upload_max_filesize = $php_uploadlimit
post_max_size = $php_uploadlimit
expose_php = Off
mail.add_x_header = Off
max_input_nesting_level = 128
max_input_vars = 2000
mysqlnd.net_cmd_buffer_size = 16384
always_populate_raw_post_data=-1
disable_functions=shell_exec
END

# Zend Opcache
opcache_path='opcache.so' #Default for PHP 5.5 and newer

if [ "$php_version" = "5.4" ]; then
    cd /usr/local/src
    wget http://pecl.php.net/get/ZendOpcache
    tar xvfz ZendOpcache
    cd zendopcache-7.*
    phpize
    php_config_path=`which php-config`
    ./configure --with-php-config=$php_config_path
    make
    make install
    rm -rf /usr/local/src/zendopcache*
    rm -f ZendOpcache
    opcache_path=`find / -name 'opcache.so'`
fi

cp ./lib/op.php -O /home/$server_name/private_html/op.php
cat > /etc/php.d/*opcache*.ini <<END
zend_extension=$opcache_path
opcache.enable=1
opcache.enable_cli=1
opcache.memory_consumption=128
opcache.interned_strings_buffer=16
opcache.max_accelerated_files=4000
opcache.max_wasted_percentage=5
opcache.use_cwd=1
opcache.validate_timestamps=1
opcache.revalidate_freq=60
opcache.fast_shutdown=1
opcache.blacklist_filename=/etc/php.d/opcache-default.blacklist
END

cat > /etc/php.d/opcache-default.blacklist <<END
/home/*/public_html/wp-content/plugins/backwpup/*
/home/*/public_html/wp-content/plugins/duplicator/*
/home/*/public_html/wp-content/plugins/updraftplus/*
/home/$server_name/private_html/
END

systemctl restart php-fpm.service

# Nginx #
cat > "/etc/nginx/nginx.conf" <<END

user nginx;
worker_processes auto;
worker_rlimit_nofile 260000;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  2048;
    accept_mutex off;
    accept_mutex_delay 200ms;
    use epoll;
    #multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '\$remote_addr - \$remote_user [\$time_local] "\$request" '
                  '\$status \$body_bytes_sent "\$http_referer" '
                  '"\$http_user_agent" "\$http_x_forwarded_for"';

    #Disable IFRAME
    add_header X-Frame-Options SAMEORIGIN;

    #Prevent Cross-site scripting (XSS) attacks
    add_header X-XSS-Protection "1; mode=block";

    #Prevent MIME-sniffing
    add_header X-Content-Type-Options nosniff;

    access_log  off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay off;
    types_hash_max_size 2048;
    server_tokens off;
    server_names_hash_bucket_size 128;
    client_max_body_size 0;
    client_body_buffer_size 256k;
    client_body_in_file_only off;
    client_body_timeout 60s;
    client_header_buffer_size 256k;
    client_header_timeout  20s;
    large_client_header_buffers 8 256k;
    keepalive_timeout 10;
    keepalive_disable msie6;
    reset_timedout_connection on;
    send_timeout 60s;

    gzip on;
    gzip_static on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json text/javascript application/javascript text/xml application/xml application/xml+rss;

    include /etc/nginx/conf.d/*.conf;
}
END

cat > "/usr/share/nginx/html/403.html" <<END
<html>
<head><title>403 Forbidden</title></head>
<body bgcolor="white">
<center><h1>403 Forbidden</h1></center>
<hr><center>dwg-nginx</center>
</body>
</html>
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
END

cat > "/usr/share/nginx/html/404.html" <<END
<html>
<head><title>404 Not Found</title></head>
<body bgcolor="white">
<center><h1>404 Not Found</h1></center>
<hr><center>dwg-nginx</center>
</body>
</html>
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
END

rm -rf /etc/nginx/conf.d/*
> /etc/nginx/conf.d/default.conf

server_name_alias="www.$server_name"
if [[ $server_name == *www* ]]; then
    server_name_alias=${server_name/www./''}
fi

cat > "/etc/nginx/conf.d/$server_name.conf" <<END
server {
    listen 80;

    server_name $server_name_alias;
    rewrite ^(.*) http://$server_name\$1 permanent;
}

server {
    listen 80 default_server;

    # access_log off;
    access_log /home/$server_name/logs/access.log;
    # error_log off;
        error_log /home/$server_name/logs/error.log;

        root /home/$server_name/public_html;
    index index.php index.html index.htm;
        server_name $server_name;

        location / {
        try_files \$uri \$uri/ /index.php?\$args;
    }

    # Custom configuration
    include /home/$server_name/public_html/*.conf;

        location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
            include /etc/nginx/fastcgi_params;
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
        fastcgi_connect_timeout 1000;
        fastcgi_send_timeout 1000;
        fastcgi_read_timeout 1000;
        fastcgi_buffer_size 256k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_intercept_errors on;
            fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
        }

    location /nginx_status {
        stub_status on;
        access_log   off;
        allow 127.0.0.1;
        allow $server_ip;
        deny all;
    }

    location /php_status {
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME  \$document_root\$fastcgi_script_name;
        include /etc/nginx/fastcgi_params;
        allow 127.0.0.1;
        allow $server_ip;
        deny all;
        }

    # Disable .htaccess and other hidden files
    location ~ /\.(?!well-known).* {
        deny all;
        access_log off;
        log_not_found off;
    }

        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location ~* \.(3gp|gif|jpg|jpeg|png|ico|wmv|avi|asf|asx|mpg|mpeg|mp4|pls|mp3|mid|wav|swf|flv|exe|zip|tar|rar|gz|tgz|bz2|uha|7z|doc|docx|xls|xlsx|pdf|iso|eot|svg|ttf|woff)$ {
            gzip_static off;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        access_log off;
        expires 30d;
        break;
        }

        location ~* \.(txt|js|css)$ {
            add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        access_log off;
        expires 30d;
        break;
        }
}

server {
    listen $admin_port;

    access_log off;
    log_not_found off;
    error_log /home/$server_name/logs/nginx_error.log;

        root /home/$server_name/private_html;
    index index.php index.html index.htm;
        server_name $server_name;

    auth_basic "Restricted";
    auth_basic_user_file /home/$server_name/private_html/hocvps/.htpasswd;

        location / {
        autoindex on;
        try_files \$uri \$uri/ /index.php;
    }

        location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
            include /etc/nginx/fastcgi_params;
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
        fastcgi_connect_timeout 1000;
        fastcgi_send_timeout 1000;
        fastcgi_read_timeout 1000;
        fastcgi_buffer_size 256k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_intercept_errors on;
            fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
        }

    location ~ /\. {
        deny all;
    }
}
END

cat >> "/etc/security/limits.conf" <<END
* soft nofile 262144
* hard nofile 262144
nginx soft nofile 262144
nginx hard nofile 262144
nobody soft nofile 262144
nobody hard nofile 262144
root soft nofile 262144
root hard nofile 262144
END

ulimit -n 262144

systemctl restart nginx.service

# MariaDB #
# set /etc/my.cnf templates from Centmin Mod
cp /etc/my.cnf /etc/my.cnf-original

if [[ "$(expr $server_ram_total \<= 2099000)" = "1" ]]; then
    # echo -e "\nCopying MariaDB my-mdb10-min.cnf file to /etc/my.cnf\n"
    #wget -q $script_root/config/mysql/my-mdb10-min.cnf -O /etc/my.cnf
    cp ./lib/my-mdb10-min.cnf /etc/my.cnf
fi

if [[ "$(expr $server_ram_total \> 2100001)" = "1" && "$(expr $server_ram_total \<= 4190000)" = "1" ]]; then
    # echo -e "\nCopying MariaDB my-mdb10.cnf file to /etc/my.cnf\n"
    # wget -q $script_root/config/mysql/my-mdb10.cnf -O /etc/my.cnf
    cp ./lib/my-mdb10.cnf /etc/my.cnf
fi

if [[ "$(expr $server_ram_total \>= 4190001)" = "1" && "$(expr $server_ram_total \<= 8199999)" = "1" ]]; then
    # echo -e "\nCopying MariaDB my-mdb10-4gb.cnf file to /etc/my.cnf\n"
    # wget -q $script_root/config/mysql/my-mdb10-4gb.cnf -O /etc/my.cnf
    cp ./lib/my-mdb10-4gb.cnf /etc/my.cnf
fi

if [[ "$(expr $server_ram_total \>= 8200000)" = "1" && "$(expr $server_ram_total \<= 15999999)" = "1" ]]; then
    # echo -e "\nCopying MariaDB my-mdb10-8gb.cnf file to /etc/my.cnf\n"
    # wget -q $script_root/config/mysql/my-mdb10-8gb.cnf -O /etc/my.cnf
    cp ./lib/my-mdb10-8gb.cnf /etc/my.cnf
fi

if [[ "$(expr $server_ram_total \>= 16000000)" = "1" && "$(expr $server_ram_total \<= 31999999)" = "1" ]]; then
    # echo -e "\nCopying MariaDB my-mdb10-16gb.cnf file to /etc/my.cnf\n"
    # wget -q $script_root/config/mysql/my-mdb10-16gb.cnf -O /etc/my.cnf
    cp ./lib/my-mdb10-16gb.cnf /etc/my.cnf
fi

if [[ "$(expr $server_ram_total \>= 32000000)" = "1" ]]; then
    # echo -e "\nCopying MariaDB my-mdb10-32gb.cnf file to /etc/my.cnf\n"
    # wget -q $script_root/config/mysql/my-mdb10-32gb.cnf -O /etc/my.cnf
    cp ./lib/my-mdb10-32gb.cnf /etc/my.cnf
fi

sed -i "s/server_name_here/$server_name/g" /etc/my.cnf

rm -f /var/lib/mysql/ib_logfile0
rm -f /var/lib/mysql/ib_logfile1
rm -f /var/lib/mysql/ibdata1

